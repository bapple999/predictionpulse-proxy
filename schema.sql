-- Prediction Pulse database schema
-- Simplified Supabase SQL definitions

create table markets (
    market_id text primary key,
    market_name text not null,
    market_description text,
    event_name text,
    event_ticker text,
    expiration timestamptz,
    tags jsonb default '[]'::jsonb,
    source text not null,
    status text not null default 'TRADING'
);

create table events (
    event_id text primary key,
    title text not null,
    tags jsonb default '[]'::jsonb,
    source text not null
);

create table market_snapshots (
    id bigint generated by default as identity primary key,
    market_id text references markets(market_id),
    price numeric,
    yes_bid numeric,
    no_bid numeric,
    volume integer,
    dollar_volume numeric,
    vwap numeric,
    liquidity numeric,
    expiration timestamptz,
    timestamp timestamptz not null,
    source text not null
);

create table market_prices (
    id bigint generated by default as identity primary key,
    market_id text references markets(market_id),
    price numeric,
    change_24h numeric,
    percent_change_24h numeric,
    timestamp timestamptz not null,
    source text not null
);

create table market_outcomes (
    id bigint generated by default as identity primary key,
    market_id text references markets(market_id),
    outcome_name text,
    price numeric,
    volume integer,
    timestamp timestamptz not null,
    source text not null
);

-- Latest snapshot for each market with first seen timestamp
create view latest_snapshots as
select distinct on (s.market_id)
    s.market_id,
    m.market_name,
    m.source,
    m.expiration,
    first_seen.start_date,
    m.tags,
    s.price,
    s.yes_bid,
    s.no_bid,
    s.volume,
    s.dollar_volume,
    s.vwap,
    s.liquidity,
    s.timestamp,
    coalesce(o.outcomes, '[]'::jsonb) as outcomes
from market_snapshots s
join markets m on m.market_id = s.market_id
left join (
    select market_id,
           jsonb_agg(
               jsonb_build_object('outcome_name', outcome_name, 'price', price)
               order by outcome_name
           ) as outcomes
    from market_outcomes
    group by market_id
) o on o.market_id = s.market_id
join (
    select market_id, min(timestamp) as start_date
    from market_snapshots
    group by market_id
) as first_seen on first_seen.market_id = s.market_id
order by s.market_id, s.timestamp desc;
